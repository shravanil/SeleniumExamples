<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="8" ignored="17" total="61" passed="36">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="7364964" started-at="2019-04-02T10:46:07Z" finished-at="2019-04-02T12:48:52Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="7364964" started-at="2019-04-02T10:46:07Z" finished-at="2019-04-02T12:48:52Z">
      <class name="TestScripts.Admin">
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Admin@1738a82]" name="beforemethod" is-config="true" duration-ms="16082" started-at="2019-04-02T12:31:49Z" finished-at="2019-04-02T12:32:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Admin.CompanyDetailsUpdation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="CompanyDetailsUpdation()[pri:0, instance:TestScripts.Admin@1738a82]" name="CompanyDetailsUpdation" duration-ms="195595" started-at="2019-04-02T12:32:05Z" finished-at="2019-04-02T12:35:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CompanyDetailsUpdation -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Admin@1738a82]" name="aftermethod" is-config="true" duration-ms="1101" started-at="2019-04-02T12:35:21Z" finished-at="2019-04-02T12:35:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Admin@1738a82]" name="beforemethod" is-config="true" duration-ms="14842" started-at="2019-04-02T12:35:22Z" finished-at="2019-04-02T12:35:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Admin.CompanyDetailsActivation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="CompanyDetailsActivation()[pri:0, instance:TestScripts.Admin@1738a82]" name="CompanyDetailsActivation" duration-ms="192147" started-at="2019-04-02T12:35:37Z" finished-at="2019-04-02T12:38:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CompanyDetailsActivation -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Admin@1738a82]" name="aftermethod" is-config="true" duration-ms="1057" started-at="2019-04-02T12:38:49Z" finished-at="2019-04-02T12:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Admin@1738a82]" name="beforemethod" is-config="true" duration-ms="13237" started-at="2019-04-02T12:38:50Z" finished-at="2019-04-02T12:39:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Admin.AdminCreationAndUpdation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="AdminCreationAndUpdation()[pri:0, instance:TestScripts.Admin@1738a82]" name="AdminCreationAndUpdation" duration-ms="158378" started-at="2019-04-02T12:39:03Z" finished-at="2019-04-02T12:41:41Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//table/tbody/tr/td[2]/div[contains(text(),'admincreation6@automation.com')]"}
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e),platform=Windows NT 6.3.9600 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'IBI115', ip: '192.168.0.115', os.name: 'Windows 8.1', os.arch: 'x86', os.version: '6.3', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578737 (49da6702b16031..., userDataDir: C:\Users\SHRAVA~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:49349}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 73.0.3683.86, webStorageEnabled: true}
Session ID: e267dc3ee28e9e7f9b690a1cc7c00dbb
*** Element info: {Using=xpath, value=//table/tbody/tr/td[2]/div[contains(text(),'admincreation6@automation.com')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//table/tbody/tr/td[2]/div[contains(text(),'admincreation6@automation.com')]"}
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e),platform=Windows NT 6.3.9600 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'IBI115', ip: '192.168.0.115', os.name: 'Windows 8.1', os.arch: 'x86', os.version: '6.3', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578737 (49da6702b16031..., userDataDir: C:\Users\SHRAVA~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:49349}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 73.0.3683.86, webStorageEnabled: true}
Session ID: e267dc3ee28e9e7f9b690a1cc7c00dbb
*** Element info: {Using=xpath, value=//table/tbody/tr/td[2]/div[contains(text(),'admincreation6@automation.com')]}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at TestScripts.Admin.AdminCreationAndUpdation(Admin.java:211)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdminCreationAndUpdation -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Admin@1738a82]" name="aftermethod" is-config="true" duration-ms="1103" started-at="2019-04-02T12:41:41Z" finished-at="2019-04-02T12:41:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Admin@1738a82]" name="beforemethod" is-config="true" duration-ms="23640" started-at="2019-04-02T12:41:42Z" finished-at="2019-04-02T12:42:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Admin.AllActionsOfLogoCompanySearchAndManagePassword() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="AllActionsOfLogoCompanySearchAndManagePassword()[pri:0, instance:TestScripts.Admin@1738a82]" name="AllActionsOfLogoCompanySearchAndManagePassword" duration-ms="53739" started-at="2019-04-02T12:42:06Z" finished-at="2019-04-02T12:43:00Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at FrameworkLibrary.ReportLibrary.reportEvent(ReportLibrary.java:105)
at ApplicationPages.SACompanyPage.clickonAcceptBtn(SACompanyPage.java:317)
at TestScripts.Admin.AllActionsOfLogoCompanySearchAndManagePassword(Admin.java:256)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllActionsOfLogoCompanySearchAndManagePassword -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Admin@1738a82]" name="aftermethod" is-config="true" duration-ms="1172" started-at="2019-04-02T12:43:00Z" finished-at="2019-04-02T12:43:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Admin@1738a82]" name="beforemethod" is-config="true" duration-ms="20604" started-at="2019-04-02T12:43:01Z" finished-at="2019-04-02T12:43:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Admin.ExportAdmin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="ExportAdmin()[pri:0, instance:TestScripts.Admin@1738a82]" name="ExportAdmin" duration-ms="94448" started-at="2019-04-02T12:43:22Z" finished-at="2019-04-02T12:44:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExportAdmin -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Admin@1738a82]" name="aftermethod" is-config="true" duration-ms="1137" started-at="2019-04-02T12:44:56Z" finished-at="2019-04-02T12:44:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Admin@1738a82]" name="beforemethod" is-config="true" duration-ms="13552" started-at="2019-04-02T12:44:57Z" finished-at="2019-04-02T12:45:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Admin.GroupCreationScenarios()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="GroupCreationScenarios()[pri:0, instance:TestScripts.Admin@1738a82]" name="GroupCreationScenarios" duration-ms="59478" started-at="2019-04-02T12:45:11Z" finished-at="2019-04-02T12:46:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GroupCreationScenarios -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Admin@1738a82]" name="aftermethod" is-config="true" duration-ms="1183" started-at="2019-04-02T12:46:10Z" finished-at="2019-04-02T12:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Admin@1738a82]" name="beforemethod" is-config="true" duration-ms="9552" started-at="2019-04-02T12:46:11Z" finished-at="2019-04-02T12:46:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Admin.GroupUpdationActivateDeactivate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="GroupUpdationActivateDeactivate()[pri:0, instance:TestScripts.Admin@1738a82]" name="GroupUpdationActivateDeactivate" duration-ms="48755" started-at="2019-04-02T12:46:21Z" finished-at="2019-04-02T12:47:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GroupUpdationActivateDeactivate -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Admin@1738a82]" name="aftermethod" is-config="true" duration-ms="1229" started-at="2019-04-02T12:47:10Z" finished-at="2019-04-02T12:47:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Admin@1738a82]" name="beforemethod" is-config="true" duration-ms="11465" started-at="2019-04-02T12:47:11Z" finished-at="2019-04-02T12:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Admin.GroupMembersUpdationActivateDeactivate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="GroupMembersUpdationActivateDeactivate()[pri:0, instance:TestScripts.Admin@1738a82]" name="GroupMembersUpdationActivateDeactivate" duration-ms="50204" started-at="2019-04-02T12:47:22Z" finished-at="2019-04-02T12:48:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GroupMembersUpdationActivateDeactivate -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Admin@1738a82]" name="aftermethod" is-config="true" duration-ms="1124" started-at="2019-04-02T12:48:13Z" finished-at="2019-04-02T12:48:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Admin@1738a82]" name="beforemethod" is-config="true" duration-ms="9302" started-at="2019-04-02T12:48:14Z" finished-at="2019-04-02T12:48:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Admin.ToVerifyCustomizeAndBulkDownloadModules()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="ToVerifyCustomizeAndBulkDownloadModules()[pri:0, instance:TestScripts.Admin@1738a82]" name="ToVerifyCustomizeAndBulkDownloadModules" duration-ms="28141" started-at="2019-04-02T12:48:23Z" finished-at="2019-04-02T12:48:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at FrameworkLibrary.ReportLibrary.reportEvent(ReportLibrary.java:105)
at ApplicationPages.CustomizePage.setHours(CustomizePage.java:104)
at TestScripts.Admin.ToVerifyCustomizeAndBulkDownloadModules(Admin.java:614)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifyCustomizeAndBulkDownloadModules -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Admin@1738a82]" name="aftermethod" is-config="true" duration-ms="1109" started-at="2019-04-02T12:48:51Z" finished-at="2019-04-02T12:48:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- TestScripts.Admin -->
      <class name="TestScripts.Login">
        <test-method status="PASS" signature="beforesuite()[pri:0, instance:TestScripts.Login@ac3dc3]" name="beforesuite" is-config="true" duration-ms="921" started-at="2019-04-02T10:46:06Z" finished-at="2019-04-02T10:46:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Login@ac3dc3]" name="beforemethod" is-config="true" duration-ms="79705" started-at="2019-04-02T10:46:07Z" finished-at="2019-04-02T10:47:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Login.ForgotPasswordAndUserRegistratation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="ForgotPasswordAndUserRegistratation()[pri:0, instance:TestScripts.Login@ac3dc3]" name="ForgotPasswordAndUserRegistratation" duration-ms="61879" started-at="2019-04-02T10:47:27Z" finished-at="2019-04-02T10:48:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ForgotPasswordAndUserRegistratation -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Login@ac3dc3]" name="aftermethod" is-config="true" duration-ms="3463" started-at="2019-04-02T10:48:29Z" finished-at="2019-04-02T10:48:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="aftersuite()[pri:0, instance:TestScripts.Login@ac3dc3]" name="aftersuite" is-config="true" duration-ms="39805" started-at="2019-04-02T12:48:52Z" finished-at="2019-04-02T12:49:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- TestScripts.Login -->
      <class name="TestScripts.SuperAdmin">
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.SuperAdmin@1c8530f]" name="beforemethod" is-config="true" duration-ms="13817" started-at="2019-04-02T12:16:33Z" finished-at="2019-04-02T12:16:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.SuperAdmin.AllActionsOfCompanyModule() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="AllActionsOfCompanyModule()[pri:0, instance:TestScripts.SuperAdmin@1c8530f]" name="AllActionsOfCompanyModule" duration-ms="142129" started-at="2019-04-02T12:16:47Z" finished-at="2019-04-02T12:19:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllActionsOfCompanyModule -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.SuperAdmin@1c8530f]" name="aftermethod" is-config="true" duration-ms="1313" started-at="2019-04-02T12:19:09Z" finished-at="2019-04-02T12:19:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.SuperAdmin@1c8530f]" name="beforemethod" is-config="true" duration-ms="16672" started-at="2019-04-02T12:19:10Z" finished-at="2019-04-02T12:19:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.SuperAdmin.AllActionsOfUserAndCustomizeModule() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="AllActionsOfUserAndCustomizeModule()[pri:0, instance:TestScripts.SuperAdmin@1c8530f]" name="AllActionsOfUserAndCustomizeModule" duration-ms="199912" started-at="2019-04-02T12:19:27Z" finished-at="2019-04-02T12:22:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllActionsOfUserAndCustomizeModule -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.SuperAdmin@1c8530f]" name="aftermethod" is-config="true" duration-ms="1200" started-at="2019-04-02T12:22:47Z" finished-at="2019-04-02T12:22:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.SuperAdmin@1c8530f]" name="beforemethod" is-config="true" duration-ms="12364" started-at="2019-04-02T12:22:48Z" finished-at="2019-04-02T12:23:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.SuperAdmin.UserRegistration() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="UserRegistration()[pri:0, instance:TestScripts.SuperAdmin@1c8530f]" name="UserRegistration" duration-ms="33224" started-at="2019-04-02T12:23:01Z" finished-at="2019-04-02T12:23:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserRegistration -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.SuperAdmin@1c8530f]" name="aftermethod" is-config="true" duration-ms="1183" started-at="2019-04-02T12:23:34Z" finished-at="2019-04-02T12:23:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- TestScripts.SuperAdmin -->
      <class name="TestScripts.MyPreferences">
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.MyPreferences@3c468]" name="beforemethod" is-config="true" duration-ms="11803" started-at="2019-04-02T12:23:35Z" finished-at="2019-04-02T12:23:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.MyPreferences.ToUpdatePersonalInformation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="ToUpdatePersonalInformation()[pri:0, instance:TestScripts.MyPreferences@3c468]" name="ToUpdatePersonalInformation" duration-ms="65662" started-at="2019-04-02T12:23:47Z" finished-at="2019-04-02T12:24:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToUpdatePersonalInformation -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.MyPreferences@3c468]" name="aftermethod" is-config="true" duration-ms="1103" started-at="2019-04-02T12:24:52Z" finished-at="2019-04-02T12:24:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.MyPreferences@3c468]" name="beforemethod" is-config="true" duration-ms="17551" started-at="2019-04-02T12:24:53Z" finished-at="2019-04-02T12:25:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.MyPreferences.ToVerifyChangePassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="ToVerifyChangePassword()[pri:0, instance:TestScripts.MyPreferences@3c468]" name="ToVerifyChangePassword" duration-ms="31721" started-at="2019-04-02T12:25:11Z" finished-at="2019-04-02T12:25:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifyChangePassword -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.MyPreferences@3c468]" name="aftermethod" is-config="true" duration-ms="1046" started-at="2019-04-02T12:25:43Z" finished-at="2019-04-02T12:25:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.MyPreferences@3c468]" name="beforemethod" is-config="true" duration-ms="16179" started-at="2019-04-02T12:25:44Z" finished-at="2019-04-02T12:26:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.MyPreferences.ToVerifySignaturefunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="ToVerifySignaturefunctionality()[pri:0, instance:TestScripts.MyPreferences@3c468]" name="ToVerifySignaturefunctionality" duration-ms="53054" started-at="2019-04-02T12:26:00Z" finished-at="2019-04-02T12:26:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifySignaturefunctionality -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.MyPreferences@3c468]" name="aftermethod" is-config="true" duration-ms="1147" started-at="2019-04-02T12:26:53Z" finished-at="2019-04-02T12:26:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.MyPreferences@3c468]" name="beforemethod" is-config="true" duration-ms="17796" started-at="2019-04-02T12:26:54Z" finished-at="2019-04-02T12:27:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.MyPreferences.ToVerifyIntialfunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="ToVerifyIntialfunctionality()[pri:0, instance:TestScripts.MyPreferences@3c468]" name="ToVerifyIntialfunctionality" duration-ms="44137" started-at="2019-04-02T12:27:12Z" finished-at="2019-04-02T12:27:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifyIntialfunctionality -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.MyPreferences@3c468]" name="aftermethod" is-config="true" duration-ms="1083" started-at="2019-04-02T12:27:56Z" finished-at="2019-04-02T12:27:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.MyPreferences@3c468]" name="beforemethod" is-config="true" duration-ms="13721" started-at="2019-04-02T12:27:57Z" finished-at="2019-04-02T12:28:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.MyPreferences.ToVerifyAddressBook()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="ToVerifyAddressBook()[pri:0, instance:TestScripts.MyPreferences@3c468]" name="ToVerifyAddressBook" duration-ms="54642" started-at="2019-04-02T12:28:11Z" finished-at="2019-04-02T12:29:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifyAddressBook -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.MyPreferences@3c468]" name="aftermethod" is-config="true" duration-ms="1091" started-at="2019-04-02T12:29:06Z" finished-at="2019-04-02T12:29:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.MyPreferences@3c468]" name="beforemethod" is-config="true" duration-ms="16922" started-at="2019-04-02T12:29:07Z" finished-at="2019-04-02T12:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.MyPreferences.ToVerifyReceivedItems()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="ToVerifyReceivedItems()[pri:0, instance:TestScripts.MyPreferences@3c468]" name="ToVerifyReceivedItems" duration-ms="144206" started-at="2019-04-02T12:29:24Z" finished-at="2019-04-02T12:31:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifyReceivedItems -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.MyPreferences@3c468]" name="aftermethod" is-config="true" duration-ms="1098" started-at="2019-04-02T12:31:48Z" finished-at="2019-04-02T12:31:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- TestScripts.MyPreferences -->
      <class name="TestScripts.Dashboard">
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Dashboard@718207]" name="beforemethod" is-config="true" duration-ms="49353" started-at="2019-04-02T11:24:33Z" finished-at="2019-04-02T11:25:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Dashboard.ToVerifyAllActionsInWaitingForOthers() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="ToVerifyAllActionsInWaitingForOthers()[pri:0, instance:TestScripts.Dashboard@718207]" name="ToVerifyAllActionsInWaitingForOthers" duration-ms="435122" started-at="2019-04-02T11:25:22Z" finished-at="2019-04-02T11:32:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifyAllActionsInWaitingForOthers -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Dashboard@718207]" name="aftermethod" is-config="true" duration-ms="2385" started-at="2019-04-02T11:32:37Z" finished-at="2019-04-02T11:32:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Dashboard@718207]" name="beforemethod" is-config="true" duration-ms="37026" started-at="2019-04-02T11:32:40Z" finished-at="2019-04-02T11:33:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Dashboard.ToVerifyAllActionsInNeedToVerify() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="ToVerifyAllActionsInNeedToVerify()[pri:0, instance:TestScripts.Dashboard@718207]" name="ToVerifyAllActionsInNeedToVerify" duration-ms="417426" started-at="2019-04-02T11:33:17Z" finished-at="2019-04-02T11:40:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifyAllActionsInNeedToVerify -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Dashboard@718207]" name="aftermethod" is-config="true" duration-ms="1552" started-at="2019-04-02T11:40:14Z" finished-at="2019-04-02T11:40:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Dashboard@718207]" name="beforemethod" is-config="true" duration-ms="13111" started-at="2019-04-02T11:40:16Z" finished-at="2019-04-02T11:40:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Dashboard.ToVerifyAllActionsInMySignedItems() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="ToVerifyAllActionsInMySignedItems()[pri:0, instance:TestScripts.Dashboard@718207]" name="ToVerifyAllActionsInMySignedItems" duration-ms="291536" started-at="2019-04-02T11:40:29Z" finished-at="2019-04-02T11:45:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifyAllActionsInMySignedItems -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Dashboard@718207]" name="aftermethod" is-config="true" duration-ms="1172" started-at="2019-04-02T11:45:20Z" finished-at="2019-04-02T11:45:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Dashboard@718207]" name="beforemethod" is-config="true" duration-ms="11550" started-at="2019-04-02T11:45:21Z" finished-at="2019-04-02T11:45:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Dashboard.ToVerifyAllActionsInArchivedItems() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="ToVerifyAllActionsInArchivedItems()[pri:0, instance:TestScripts.Dashboard@718207]" name="ToVerifyAllActionsInArchivedItems" duration-ms="309030" started-at="2019-04-02T11:45:33Z" finished-at="2019-04-02T11:50:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifyAllActionsInArchivedItems -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Dashboard@718207]" name="aftermethod" is-config="true" duration-ms="1633" started-at="2019-04-02T11:50:42Z" finished-at="2019-04-02T11:50:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Dashboard@718207]" name="beforemethod" is-config="true" duration-ms="10306" started-at="2019-04-02T11:50:44Z" finished-at="2019-04-02T11:50:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Dashboard.ToVerifyAllActionsOfInPersonSigning() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="ToVerifyAllActionsOfInPersonSigning()[pri:0, instance:TestScripts.Dashboard@718207]" name="ToVerifyAllActionsOfInPersonSigning" duration-ms="214576" started-at="2019-04-02T11:50:54Z" finished-at="2019-04-02T11:54:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifyAllActionsOfInPersonSigning -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Dashboard@718207]" name="aftermethod" is-config="true" duration-ms="1150" started-at="2019-04-02T11:54:28Z" finished-at="2019-04-02T11:54:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- TestScripts.Dashboard -->
      <class name="TestScripts.CreateRequest">
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="beforemethod" is-config="true" duration-ms="28355" started-at="2019-04-02T10:48:32Z" finished-at="2019-04-02T10:49:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.CreateRequest.CreateRequestSaveToDraft() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="CreateRequestSaveToDraft()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="CreateRequestSaveToDraft" duration-ms="120052" started-at="2019-04-02T10:49:01Z" finished-at="2019-04-02T10:51:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateRequestSaveToDraft -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="aftermethod" is-config="true" duration-ms="1774" started-at="2019-04-02T10:51:01Z" finished-at="2019-04-02T10:51:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="beforemethod" is-config="true" duration-ms="29254" started-at="2019-04-02T10:51:03Z" finished-at="2019-04-02T10:51:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.CreateRequest.RequestApprovalProcessWithSingleSigner() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="RequestApprovalProcessWithSingleSigner()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="RequestApprovalProcessWithSingleSigner" duration-ms="192021" started-at="2019-04-02T10:51:32Z" finished-at="2019-04-02T10:54:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RequestApprovalProcessWithSingleSigner -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="aftermethod" is-config="true" duration-ms="2344" started-at="2019-04-02T10:54:44Z" finished-at="2019-04-02T10:54:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="beforemethod" is-config="true" duration-ms="28034" started-at="2019-04-02T10:54:46Z" finished-at="2019-04-02T10:55:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.CreateRequest.RequestApprovalProcessWithMultipleSigners() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="RequestApprovalProcessWithMultipleSigners()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="RequestApprovalProcessWithMultipleSigners" duration-ms="240765" started-at="2019-04-02T10:55:14Z" finished-at="2019-04-02T10:59:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at FrameworkLibrary.ReportLibrary.reportEvent(ReportLibrary.java:90)
at ApplicationPages.HomePage.clickonNeedToSign(HomePage.java:274)
at TestScripts.CreateRequest.RequestApprovalProcessWithMultipleSigners(CreateRequest.java:333)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RequestApprovalProcessWithMultipleSigners -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="aftermethod" is-config="true" duration-ms="1305" started-at="2019-04-02T10:59:15Z" finished-at="2019-04-02T10:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="beforemethod" is-config="true" duration-ms="16755" started-at="2019-04-02T10:59:16Z" finished-at="2019-04-02T10:59:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.CreateRequest.RequestApprovalProcessWithMultipleDocuments() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="RequestApprovalProcessWithMultipleDocuments()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="RequestApprovalProcessWithMultipleDocuments" duration-ms="183575" started-at="2019-04-02T10:59:33Z" finished-at="2019-04-02T11:02:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RequestApprovalProcessWithMultipleDocuments -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="aftermethod" is-config="true" duration-ms="1227" started-at="2019-04-02T11:02:37Z" finished-at="2019-04-02T11:02:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="beforemethod" is-config="true" duration-ms="15833" started-at="2019-04-02T11:02:38Z" finished-at="2019-04-02T11:02:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.CreateRequest.RequestApprovalProcessWithSupportingDocuments() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="RequestApprovalProcessWithSupportingDocuments()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="RequestApprovalProcessWithSupportingDocuments" duration-ms="124721" started-at="2019-04-02T11:02:54Z" finished-at="2019-04-02T11:04:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RequestApprovalProcessWithSupportingDocuments -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="aftermethod" is-config="true" duration-ms="1217" started-at="2019-04-02T11:04:58Z" finished-at="2019-04-02T11:05:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="beforemethod" is-config="true" duration-ms="13676" started-at="2019-04-02T11:05:00Z" finished-at="2019-04-02T11:05:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.CreateRequest.RequestAttachmentRequiredAtTheTimeOfApproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="RequestAttachmentRequiredAtTheTimeOfApproval()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="RequestAttachmentRequiredAtTheTimeOfApproval" duration-ms="173871" started-at="2019-04-02T11:05:13Z" finished-at="2019-04-02T11:08:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RequestAttachmentRequiredAtTheTimeOfApproval -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="aftermethod" is-config="true" duration-ms="1379" started-at="2019-04-02T11:08:07Z" finished-at="2019-04-02T11:08:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="beforemethod" is-config="true" duration-ms="17067" started-at="2019-04-02T11:08:09Z" finished-at="2019-04-02T11:08:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.CreateRequest.TemplateCreationActivationAndRequestCreationApprovalProcess() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="TemplateCreationActivationAndRequestCreationApprovalProcess()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="TemplateCreationActivationAndRequestCreationApprovalProcess" duration-ms="272081" started-at="2019-04-02T11:08:26Z" finished-at="2019-04-02T11:12:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TemplateCreationActivationAndRequestCreationApprovalProcess -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="aftermethod" is-config="true" duration-ms="1218" started-at="2019-04-02T11:12:58Z" finished-at="2019-04-02T11:12:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="beforemethod" is-config="true" duration-ms="15329" started-at="2019-04-02T11:12:59Z" finished-at="2019-04-02T11:13:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.CreateRequest.GroupRequestApprovalProcess() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="GroupRequestApprovalProcess()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="GroupRequestApprovalProcess" duration-ms="247276" started-at="2019-04-02T11:13:14Z" finished-at="2019-04-02T11:17:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GroupRequestApprovalProcess -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="aftermethod" is-config="true" duration-ms="1561" started-at="2019-04-02T11:17:22Z" finished-at="2019-04-02T11:17:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="beforemethod" is-config="true" duration-ms="27980" started-at="2019-04-02T11:17:23Z" finished-at="2019-04-02T11:17:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.CreateRequest.InPersonRequestCreation() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="InPersonRequestCreation()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="InPersonRequestCreation" duration-ms="131686" started-at="2019-04-02T11:17:51Z" finished-at="2019-04-02T11:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InPersonRequestCreation -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="aftermethod" is-config="true" duration-ms="1284" started-at="2019-04-02T11:20:03Z" finished-at="2019-04-02T11:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="beforemethod" is-config="true" duration-ms="28873" started-at="2019-04-02T11:20:04Z" finished-at="2019-04-02T11:20:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.CreateRequest.GroupRequestApprovalProcessbyUploadingSignersFile() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="GroupRequestApprovalProcessbyUploadingSignersFile()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="GroupRequestApprovalProcessbyUploadingSignersFile" duration-ms="235733" started-at="2019-04-02T11:20:33Z" depends-on-methods="TestScripts.CreateRequest.GroupRequestApprovalProcess" finished-at="2019-04-02T11:24:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GroupRequestApprovalProcessbyUploadingSignersFile -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.CreateRequest@eebfca]" name="aftermethod" is-config="true" duration-ms="3810" started-at="2019-04-02T11:24:29Z" finished-at="2019-04-02T11:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- TestScripts.CreateRequest -->
      <class name="TestScripts.Templates">
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Templates@3c6f6d]" name="beforemethod" is-config="true" duration-ms="17189" started-at="2019-04-02T12:03:52Z" finished-at="2019-04-02T12:04:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Templates.EditUpdateActivateDeactivateDeleteTemplate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="EditUpdateActivateDeactivateDeleteTemplate()[pri:0, instance:TestScripts.Templates@3c6f6d]" name="EditUpdateActivateDeactivateDeleteTemplate" duration-ms="101200" started-at="2019-04-02T12:04:10Z" finished-at="2019-04-02T12:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditUpdateActivateDeactivateDeleteTemplate -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Templates@3c6f6d]" name="aftermethod" is-config="true" duration-ms="1109" started-at="2019-04-02T12:05:51Z" finished-at="2019-04-02T12:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Templates@3c6f6d]" name="beforemethod" is-config="true" duration-ms="16803" started-at="2019-04-02T12:05:52Z" finished-at="2019-04-02T12:06:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Templates.ActivateDeactivateArchiveCopyDeleteTemplate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="ActivateDeactivateArchiveCopyDeleteTemplate()[pri:0, instance:TestScripts.Templates@3c6f6d]" name="ActivateDeactivateArchiveCopyDeleteTemplate" duration-ms="68592" started-at="2019-04-02T12:06:09Z" finished-at="2019-04-02T12:07:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at FrameworkLibrary.ReportLibrary.reportEvent(ReportLibrary.java:90)
at ApplicationPages.HomePage.clickonTemplatesMenu(HomePage.java:190)
at TestScripts.Templates.ActivateDeactivateArchiveCopyDeleteTemplate(Templates.java:157)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ActivateDeactivateArchiveCopyDeleteTemplate -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Templates@3c6f6d]" name="aftermethod" is-config="true" duration-ms="1088" started-at="2019-04-02T12:07:17Z" finished-at="2019-04-02T12:07:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Templates@3c6f6d]" name="beforemethod" is-config="true" duration-ms="12726" started-at="2019-04-02T12:07:18Z" finished-at="2019-04-02T12:07:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Templates.PrintAndDownloadTemplateDocument() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="PrintAndDownloadTemplateDocument()[pri:0, instance:TestScripts.Templates@3c6f6d]" name="PrintAndDownloadTemplateDocument" duration-ms="103878" started-at="2019-04-02T12:07:31Z" finished-at="2019-04-02T12:09:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PrintAndDownloadTemplateDocument -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Templates@3c6f6d]" name="aftermethod" is-config="true" duration-ms="1135" started-at="2019-04-02T12:09:15Z" finished-at="2019-04-02T12:09:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- TestScripts.Templates -->
      <class name="TestScripts.Requests">
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Requests@1371b2d]" name="beforemethod" is-config="true" duration-ms="17799" started-at="2019-04-02T11:54:30Z" finished-at="2019-04-02T11:54:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Requests.RequestEditUpdateSendLater() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="RequestEditUpdateSendLater()[pri:0, instance:TestScripts.Requests@1371b2d]" name="RequestEditUpdateSendLater" duration-ms="218814" started-at="2019-04-02T11:54:47Z" finished-at="2019-04-02T11:58:26Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='mainhead']/div[1]/span[contains(text(),'All  Requests')]"}
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e),platform=Windows NT 6.3.9600 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'IBI115', ip: '192.168.0.115', os.name: 'Windows 8.1', os.arch: 'x86', os.version: '6.3', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578737 (49da6702b16031..., userDataDir: C:\Users\SHRAVA~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:62518}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 73.0.3683.86, webStorageEnabled: true}
Session ID: e78d80de2ceabf4ad721c14cbfdd81d1
*** Element info: {Using=xpath, value=//div[@class='mainhead']/div[1]/span[contains(text(),'All  Requests')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='mainhead']/div[1]/span[contains(text(),'All  Requests')]"}
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e),platform=Windows NT 6.3.9600 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'IBI115', ip: '192.168.0.115', os.name: 'Windows 8.1', os.arch: 'x86', os.version: '6.3', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578737 (49da6702b16031..., userDataDir: C:\Users\SHRAVA~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:62518}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 73.0.3683.86, webStorageEnabled: true}
Session ID: e78d80de2ceabf4ad721c14cbfdd81d1
*** Element info: {Using=xpath, value=//div[@class='mainhead']/div[1]/span[contains(text(),'All  Requests')]}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.isDisplayed(Unknown Source)
at TestScripts.Requests.RequestEditUpdateSendLater(Requests.java:114)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RequestEditUpdateSendLater -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Requests@1371b2d]" name="aftermethod" is-config="true" duration-ms="1167" started-at="2019-04-02T11:58:26Z" finished-at="2019-04-02T11:58:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Requests@1371b2d]" name="beforemethod" is-config="true" duration-ms="17113" started-at="2019-04-02T11:58:27Z" finished-at="2019-04-02T11:58:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Requests.RemoveReplaceVoidBypassSigner() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="RemoveReplaceVoidBypassSigner()[pri:0, instance:TestScripts.Requests@1371b2d]" name="RemoveReplaceVoidBypassSigner" duration-ms="182128" started-at="2019-04-02T11:58:45Z" finished-at="2019-04-02T12:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RemoveReplaceVoidBypassSigner -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Requests@1371b2d]" name="aftermethod" is-config="true" duration-ms="1120" started-at="2019-04-02T12:01:47Z" finished-at="2019-04-02T12:01:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Requests@1371b2d]" name="beforemethod" is-config="true" duration-ms="13605" started-at="2019-04-02T12:01:48Z" finished-at="2019-04-02T12:02:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Requests.EditRequestAddCustomFieldsUpdatePrivileges() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="EditRequestAddCustomFieldsUpdatePrivileges()[pri:0, instance:TestScripts.Requests@1371b2d]" name="EditRequestAddCustomFieldsUpdatePrivileges" duration-ms="109896" started-at="2019-04-02T12:02:01Z" finished-at="2019-04-02T12:03:51Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//table/tbody/tr/td[2][contains(text(),'Leave Type')]/following-sibling::td[6]/a[1]"}
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e),platform=Windows NT 6.3.9600 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'IBI115', ip: '192.168.0.115', os.name: 'Windows 8.1', os.arch: 'x86', os.version: '6.3', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578737 (49da6702b16031..., userDataDir: C:\Users\SHRAVA~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:63000}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 73.0.3683.86, webStorageEnabled: true}
Session ID: 6d723391c7f5b0c4e3e67026e7543c00
*** Element info: {Using=xpath, value=//table/tbody/tr/td[2][contains(text(),'Leave Type')]/following-sibling::td[6]/a[1]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//table/tbody/tr/td[2][contains(text(),'Leave Type')]/following-sibling::td[6]/a[1]"}
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e),platform=Windows NT 6.3.9600 x86) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'IBI115', ip: '192.168.0.115', os.name: 'Windows 8.1', os.arch: 'x86', os.version: '6.3', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578737 (49da6702b16031..., userDataDir: C:\Users\SHRAVA~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:63000}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 73.0.3683.86, webStorageEnabled: true}
Session ID: 6d723391c7f5b0c4e3e67026e7543c00
*** Element info: {Using=xpath, value=//table/tbody/tr/td[2][contains(text(),'Leave Type')]/following-sibling::td[6]/a[1]}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at TestScripts.Requests.EditRequestAddCustomFieldsUpdatePrivileges(Requests.java:782)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditRequestAddCustomFieldsUpdatePrivileges -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Requests@1371b2d]" name="aftermethod" is-config="true" duration-ms="1134" started-at="2019-04-02T12:03:51Z" finished-at="2019-04-02T12:03:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- TestScripts.Requests -->
      <class name="TestScripts.Reports">
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Reports@1eb8acf]" name="beforemethod" is-config="true" duration-ms="11278" started-at="2019-04-02T12:09:16Z" finished-at="2019-04-02T12:09:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Reports.AllActionInMetricsReport()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="AllActionInMetricsReport()[pri:0, instance:TestScripts.Reports@1eb8acf]" name="AllActionInMetricsReport" duration-ms="98421" started-at="2019-04-02T12:09:27Z" finished-at="2019-04-02T12:11:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at FrameworkLibrary.ReportLibrary.reportEvent(ReportLibrary.java:105)
at ApplicationPages.ReportsPage.clickonEditIcon(ReportsPage.java:177)
at TestScripts.Reports.AllActionInMetricsReport(Reports.java:50)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllActionInMetricsReport -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Reports@1eb8acf]" name="aftermethod" is-config="true" duration-ms="1068" started-at="2019-04-02T12:11:06Z" finished-at="2019-04-02T12:11:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Reports@1eb8acf]" name="beforemethod" is-config="true" duration-ms="16181" started-at="2019-04-02T12:11:07Z" finished-at="2019-04-02T12:11:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Reports.AllActionInDetailedReport()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="AllActionInDetailedReport()[pri:0, instance:TestScripts.Reports@1eb8acf]" name="AllActionInDetailedReport" duration-ms="151712" started-at="2019-04-02T12:11:23Z" finished-at="2019-04-02T12:13:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllActionInDetailedReport -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Reports@1eb8acf]" name="aftermethod" is-config="true" duration-ms="1078" started-at="2019-04-02T12:13:55Z" finished-at="2019-04-02T12:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Reports@1eb8acf]" name="beforemethod" is-config="true" duration-ms="13251" started-at="2019-04-02T12:13:56Z" finished-at="2019-04-02T12:14:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Reports.AllActionInSignerReport()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="AllActionInSignerReport()[pri:0, instance:TestScripts.Reports@1eb8acf]" name="AllActionInSignerReport" duration-ms="80778" started-at="2019-04-02T12:14:09Z" finished-at="2019-04-02T12:15:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllActionInSignerReport -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Reports@1eb8acf]" name="aftermethod" is-config="true" duration-ms="1096" started-at="2019-04-02T12:15:30Z" finished-at="2019-04-02T12:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestScripts.Reports@1eb8acf]" name="beforemethod" is-config="true" duration-ms="14244" started-at="2019-04-02T12:15:31Z" finished-at="2019-04-02T12:15:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestScripts.Reports.AllActionInCustomFieldReport()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="AllActionInCustomFieldReport()[pri:0, instance:TestScripts.Reports@1eb8acf]" name="AllActionInCustomFieldReport" duration-ms="46738" started-at="2019-04-02T12:15:45Z" finished-at="2019-04-02T12:16:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllActionInCustomFieldReport -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:TestScripts.Reports@1eb8acf]" name="aftermethod" is-config="true" duration-ms="1076" started-at="2019-04-02T12:16:32Z" finished-at="2019-04-02T12:16:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- TestScripts.Reports -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
